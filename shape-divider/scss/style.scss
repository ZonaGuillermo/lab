* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

/*
Usamos una variable para ajustar la altura del shape divider.

Las unidades deben ser relativas al ancho del visor para que se mantenga la forma del shape divider. En las diagonales mantiene la misma pendiente y en la elipse el arco.
*/
:root{
	--heightDivider: 20vw;
}

div{
	padding: 2rem 0.5rem;
}

h1, p:not(:last-child) {
	margin-bottom: 1rem;
}

/*
Comenzamos haciendo position:relative sobre .shape-divider para dar un punto de referencia al pseudoelemento ::after que contendrá el clip-path de la forma divisoria
*/
.shape-divider {
	position: relative;

	&:nth-child(odd) {
		background-color: hsl(158, 94%, 35%);
	}
	
	&:nth-child(even) {
		background-color: hsl(197, 100%, 70%);
	}

/*
Usamos ::before para salvar la altura del divisor entre las secciones.
Los pseudoelementos ::after y ::before son elementos en linea, luego es
Importante usar display: block para que coja la altura.
*/
	&:not(:first-child)::before {
		content: '';
		display: block;
		height: var(--heightDivider);
	}

/*
Hacemos position: absolute para situar el pseudoelemento.

El último elemento no debe tener forma divisoria así que 
hacemos :not(:last-child) para que desaparezca.

IMPORTANTE poner z-index: 1 para que sea visible el divisor.
*/
	&:not(:last-child)::after {
		content: '';
		position: absolute;
		width: 100%;
		height: var(--heightDivider);
		z-index: 1;
	}

/*
Hacemos shape divider diferente en pares e impares.
*/
	&:nth-child(odd)::after {
		clip-path: polygon(0 0, 100% 0, 0 100%);
		background-color: hsl(158, 94%, 35%);
	}

	&:nth-child(even)::after {
		clip-path: polygon(0 0, 100% 0, 100% 100%);
		background-color: hsl(197, 100%, 70%);
	}

/*
Podemos hacer un shape divider diferente para una sección concreta.
clip-path: ellipse(ancho alto at posX posY) respecto de la caja contenedora.
*/
	&:nth-child(4)::after {
		clip-path: ellipse(50% var(--heightDivider) at 50% 0%);
	}
	
	&:nth-child(5)::after {
		clip-path: polygon(0 0, 50% 0, 50% 1.5rem, 100% 1.5rem, 100% 0);
	}

	&:nth-child(6)::after {
		clip-path: polygon(0 0, 10% 20%, 20% 0, 30% 20%, 40% 0, 50% 20%, 60% 0, 70% 20%, 80% 0, 90% 20%, 100% 0);
	}

	&:nth-child(7)::after {
		clip-path: polygon(0 0, 0 25%, 50% 75%, 100% 25%, 100% 0);
	}

	&:nth-child(8)::after {
		clip-path: ellipse(100% var(--heightDivider) at 0% 0%);
	}

	&:nth-child(9)::after {
		clip-path: ellipse(100% var(--heightDivider) at 100% 0%);
	}

	/*
		&:nth-child(10)::after  y  &:nth-child(11)::before  trabajan juntos
	*/
	&:nth-child(10)::after {
		clip-path: circle(50vW at 50% 0%);
		height: 50vW;
	}

	&:nth-child(11)::before {
		height: 50vw;
	}
/*
	&:nth-child(10)::after  y  &:nth-child(11)::before  trabajan juntos
*/


	&:nth-child(11)::after {
		clip-path: circle(var(--heightDivider) at 50% 0%);
	}
}